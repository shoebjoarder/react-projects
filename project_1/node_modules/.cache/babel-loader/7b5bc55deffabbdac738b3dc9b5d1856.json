{"ast":null,"code":"var _jsxFileName = \"/home/allan/GoogleDrive/00_Projekte/01_Github_myRepositories/react-projects/Project_1/src/components/TodoItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // validation of properties that components should have either we can set the type or if its required\n\nexport class TodoItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        background: '#f4f4f4',\n        padding: '10px',\n        borderBottom: '1px #ccc dotted',\n        textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n      };\n    };\n  }\n\n  markComplete(e) {\n    console.log(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: this.getStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.markComplete.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }), \" \", ' ', this.props.todo.title));\n  }\n\n} // proptypes\n\nTodoItem.propTypes = {\n  // this should the name of the class in this file\n  todo: PropTypes.array.isRequired // this should be the var in the file that is holding the props\n\n};\nexport default TodoItem;","map":{"version":3,"sources":["/home/allan/GoogleDrive/00_Projekte/01_Github_myRepositories/react-projects/Project_1/src/components/TodoItem.js"],"names":["React","Component","PropTypes","TodoItem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","markComplete","e","console","log","render","bind","title","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAAmC;;AAEnC,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SACpCG,QADoC,GACzB,MAAM;AACb,aAAO;AACHC,QAAAA,UAAU,EAAE,SADT;AAEHC,QAAAA,OAAO,EAAE,MAFN;AAGHC,QAAAA,YAAY,EAAE,iBAHX;AAIHC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAA4B,cAA5B,GAA6C;AAJ1D,OAAP;AAMH,KARmC;AAAA;;AAUpCC,EAAAA,YAAY,CAACC,CAAD,EAAG;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACH;;AACDO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAG,KAAKZ,QAAL,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAE,KAAKQ,YAAL,CAAkBK,IAAlB,CAAuB,IAAvB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,OACsE,GADtE,EAEM,KAAKR,KAAL,CAAWC,IAAX,CAAgBQ,KAFtB,CADJ,CADJ;AAQH;;AAtBmC,C,CAyBxC;;AACAf,QAAQ,CAACgB,SAAT,GAAqB;AAAE;AACnBT,EAAAA,IAAI,EAAER,SAAS,CAACkB,KAAV,CAAgBC,UADL,CACgB;;AADhB,CAArB;AAMA,eAAelB,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types' // validation of properties that components should have either we can set the type or if its required\n\nexport class TodoItem extends Component {\n    getStyle = () => {\n        return {\n            background: '#f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n        }\n    }\n\n    markComplete(e){\n        console.log(this.props)\n    }\n    render() {\n        return (\n            <div style={ this.getStyle() }>\n                <p>\n                    <input type=\"checkbox\" onChange={this.markComplete.bind(this)}/> {' '}\n                    { this.props.todo.title }\n                </p>\n            </div>\n        )\n    }\n}\n\n// proptypes\nTodoItem.propTypes = { // this should the name of the class in this file\n    todo: PropTypes.array.isRequired // this should be the var in the file that is holding the props\n}\n\n\n\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}