{"ast":null,"code":"var _jsxFileName = \"/home/allan/GoogleDrive/00_Projekte/01_Github_myRepositories/react-projects/project_1/src/App.js\";\nimport React from 'react';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport { v4 as uuid } from 'uuid';\n\nclass App extends React.Component {\n  // Task to create the constructor and super \n  constructor(props) {\n    super(props); // Task to create Constructor\n\n    this.markComplete = id => {\n      // console.log(id)\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      //console.log(id)\n      this.setState({\n        // ... spread operator copy everything from this.state\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n\n    this.addTodo = title => {\n      //console.log(title)\n      const newTodo = {\n        id: uuid(),\n        title: title,\n        completed: false\n      };\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    };\n\n    console.log(\"Constructor: Constructor loaded\"); // Task to create one property array of state\n\n    this.state = {\n      todos: [{\n        id: uuid(),\n        title: 'Take out the trash',\n        completed: false\n      }, {\n        id: uuid(),\n        title: 'Dinner with wife',\n        completed: false\n      }, {\n        id: uuid(),\n        title: 'Meeting with friends',\n        completed: false\n      }]\n    };\n  } // Task to create componentWillMount\n\n\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount: Component is unmounted from the DOM!\");\n  } // Task to create componentDidMount\n\n\n  componentDidMount() {\n    const newTodo = {\n      id: uuid(),\n      title: 'Component did mount to do',\n      completed: false\n    };\n    setTimeout(() => {\n      this.setState({\n        todo: [...this.state.todos, newTodo]\n      });\n    }, 5000);\n    console.log(\"componentDidMount: Component is mounted!\");\n  } // Task to create component did mount\n\n\n  shouldComponentUpdate(newProps, newState) {\n    var count = Object.keys(newState.todos).length;\n    console.log(\"shouldComponentUpdate: Should the component update?\");\n\n    if (count < 5) {\n      console.log(\"shouldComponentUpdate: Component should update!\");\n      return true;\n    } else {\n      this.componentWillMount();\n      console.log(\"shouldComponentUpdate: Component should not update!\");\n      return false;\n    }\n  } // Toggle complete\n\n\n  render() {\n    //console.log(this.state.todos)\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AddTodo, {\n      addTodo: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Todos, {\n      todos: this.state.todos,\n      markComplete: this.markComplete,\n      delTodo: this.delTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/allan/GoogleDrive/00_Projekte/01_Github_myRepositories/react-projects/project_1/src/App.js"],"names":["React","Todos","Header","AddTodo","v4","uuid","App","Component","constructor","props","markComplete","id","setState","todos","state","map","todo","completed","delTodo","filter","addTodo","title","newTodo","console","log","componentWillUnmount","componentDidMount","setTimeout","shouldComponentUpdate","newProps","newState","count","Object","keys","length","componentWillMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header'\nimport AddTodo from './components/AddTodo'\nimport { v4 as uuid } from 'uuid'\n\nclass App extends React.Component {\n  // Task to create the constructor and super \n  constructor(props) {\n    super(props);\n    // Task to create Constructor\n    console.log(\"Constructor: Constructor loaded\");\n    // Task to create one property array of state\n    this.state = {\n      todos: [\n        {\n          id: uuid(),\n          title: 'Take out the trash',\n          completed: false\n        },\n        {\n          id: uuid(),\n          title: 'Dinner with wife',\n          completed: false\n        },\n        {\n          id: uuid(),\n          title: 'Meeting with friends',\n          completed: false\n        }\n      ]\n    }\n  }\n\n  // Task to create componentWillMount\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount: Component is unmounted from the DOM!\");\n  }\n\n  // Task to create componentDidMount\n  componentDidMount() {\n    const newTodo = {\n      id: uuid(),\n      title: 'Component did mount to do',\n      completed: false\n    }\n    setTimeout(() => {\n      this.setState({\n        todo: [...this.state.todos, newTodo]\n      })\n    }, 5000)\n    console.log(\"componentDidMount: Component is mounted!\");\n  }\n\n  // Task to create component did mount\n  shouldComponentUpdate(newProps, newState) {\n    var count = Object.keys(newState.todos).length\n    console.log(\"shouldComponentUpdate: Should the component update?\");\n    if (count < 5) {\n      console.log(\"shouldComponentUpdate: Component should update!\");\n      return true;\n    } else {\n      this.componentWillMount();\n      console.log(\"shouldComponentUpdate: Component should not update!\");\n      return false;\n    }\n  }\n\n\n  // Toggle complete\n  markComplete = (id) => {\n    // console.log(id)\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo;\n      })\n    })\n  }\n\n  delTodo = (id) => {\n    //console.log(id)\n    this.setState({\n      // ... spread operator copy everything from this.state\n      todos: [...this.state.todos.filter(todo => todo.id !== id)]\n    })\n  }\n\n  // this can be one task for event handling passing argument\n  addTodo = (title) => {\n    //console.log(title)\n    const newTodo = {\n      id: uuid(),\n      title: title,\n      completed: false\n    }\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  }\n\n  render() {\n    //console.log(this.state.todos)\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Header />\n          <AddTodo addTodo={this.addTodo} />\n          <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}